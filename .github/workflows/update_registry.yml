name: registry-update-workflow
on:
  workflow_dispatch:
    inputs:
      port-name:
        description: Name of the port to update
        required: true
      port-ref:
        description: SHA hash of the updated port
        required: true
      user-repo-name:
        description: "Name of the repo the port is being updated from (should be 'user/repo')"
        required: true

concurrency: "registry_modification"

env:
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
  VCPKG_FEATURE_FLAGS: manifests,binarycaching
  X_VCPKG_NUGET_ID_PREFIX: mvr # mh-vcpkg-registry

jobs:
  update:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: PazerOP/gha-setup-nuget@HEAD

      - run: ./update-registry.ps1 -PortName "${{ github.event.inputs.port-name }}" -PortRef "${{ github.event.inputs.port-ref }}" -UserRepoName "${{ github.event.inputs.repo-name }}"
        shell: pwsh

      - name: Make sure we can build
        run: vcpkg install ${{ github.event.inputs.port-name }} --debug --overlay-ports "ports"

      - name: Format all manifests
        run: vcpkg format-manifest --all --x-builtin-ports-root="ports/" --x-builtin-registry-versions-dir="versions/"

      - name: Configure git
        run: |
          git config --global user.email "mrhaynie@live.com"
          git config --global user.name "Matt Haynie (vcpkg-registry-update)"

      - name: Commit ports
        run: |
          git add "ports/*"
          git commit "ports/*" -m "Updated ports"
        # uses: EndBug/add-and-commit@v7.4.0
        # with:
        #   add: 'ports/*'
        #   message: "Updated ports"
        #   push: false

      - name: Update versions
        run: vcpkg x-add-version --all --overwrite-version --verbose --x-builtin-ports-root="ports/" --x-builtin-registry-versions-dir="versions/"

      - name: Commit versions
        run: |
          git add "versions/*"
          git commit "versions/*" -m "Updated versions"
      #   uses: EndBug/add-and-commit@v7.4.0
      #   with:
      #     add: 'versions/*'
      #     message: "Updated versions"
      #     push: true

      - run: git push


